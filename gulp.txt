Gulp - сборщик файлов.
Что бы заработал галп нужно:


1. Установить npm 
2. Создать файл gulpfile.js
3. Создать функцию и обьявить её через gulp.task
4. Написать в терминал функцию gulp название task-a 

Gulp-cli - запускает таски.
   npm i gulp-cli -g - команда для глобальной установки (в каждом файле) gulp-cli.

   gulp.task("styles", styles), где task - метод обьекта gulp, "styles" - название события, styles - обработчик события

   .pipe - какое-то действие с файлами проекта. В них надо передавать вызов плагинов галпа, которые ищутся в гугле, как плагин NodeJs-а, перед которым 
    ставится дополнительное слово gulp.

   чтобы подключить плагин галпа к проекту нужно:
      установить плагин галпа, в ГитБаше написать, к примеру: npm i gulp-concat -D
      дальше подключить его к файлу gulpfile.js с помощью команды require: const concat = require('gulp-concat');
      потом добавить этот плагин в .pipe с помощью документации: .pipe(concat('all.css'));

   маска **/*.css - ищет все файлы css, включая вложеные папки.

   gulp.dest - перемещает файлы в заданое место.
   gulp.watch - отслеживает все изминения указаного файла
   gulp.concat - сливает файлы воедино 
         + можно задать определённый порядок с помощью массива с ссылками на файлы, и в зависимости от порядка ссылок в массиве будет слиение: 

            const files = [
                './css/some.css',    <-- первый в очереди
                './css/gulp.css'     <-- второй в очереди
            ]

            function styles (){
                return gulp.src(files) 
            } 
   gulp.autoprefixer - подстраевает файлы определённым образом
   gulp.clean-css - сжимает css файлы определённым образом
   gulp.uglify - сжимает js файлы определённым образом
   gulp.parallel - запускает несколько функций паралельно
   gulp.series - запускает последовательное выполнение функций 
   gulp.browserSync - автообновляет страницу 
   gulp.gcmq - груперирует одинаковые медиа-ширины 
Чтобы отправить проект з галпом, достаточно скинуть файл package.json, чтобы установить подходящие модули, 
 кроме того, папку node_modules нельзя выкладывать на гит.
Файл package-lock.json гарантирует работу модулей. 
Картинки формата webp автоматически автомизируются под сайт.
Для максимальной оптимизации картинки на странице стоит добавить тег:
    <picture>
        <source> <-- для картинок формата webp
        <img>   <-- для картинок формата png, jpg etc.
    </picture>
Принцип такой: ставим изначально фоновое изоброжение в формате webp и маленький фрагмент js-кода
 проверяет поддерживает ли данный браузер формат webp, если нет, то подставляется картинка со стандартным форматом.
Чтобы использовать сборку галпа в новом проекте нужно:
    1. Скопировать файлы package-lock.json, package.json, gulpfile.js в новый проект.
    2. В терминале написать команду npm i.
    3. Если нужно изменить пути файлов.

npm ls --depth=0 - команда терминала, чтобы узнать список установленных модулей.
npm init -у - команда терминала, чтобы создать файл package.json.
Зависимости бывают:
    1. dependences
    2. devDependences, где префикс dev означает, что данный модуль будет использываться, только при разработке проекта.
process.argv.includes('--dev') - пример создания флажка --dev

Бывают препроцессоры и постпроцессоры, где постпроцессоры работают уже з готовым валидным файлом.
Когда импортируешь в less файлы css их код вставляться не будет, а если импортировать другие less-файлы, то будет.
    При импорте файлы css можна превратить в less-файлы, просто вписав перед путем к файлу команду (less)
Чтобы склеять вложеный селектор с основным стоит использовать перед названием вложеного селетора &
Препроцессоры могут производить арифметические операции. Если использовать calc() или ~"", то исчеисления сделаны не будут.
Переменные в less-е создаются @-ами, значение пишется через :,  можно, как локальную переменную использовать свойство, как переменную с помощью знака $
Примесь в препроцессоре напоминает функцию джаваскрипта, но не выполняет код, а содержит перечень свойств. Чтобы селектор сделать примесью достаточно
    после него поставить (), а чтобы обратиться к примеси нужно использовать ее селектор, а после него().




Проблемы
    No gulpfile found
        - решение: назвать файл с разрешением .js, как gulpfile.js
    gulp.del не работает
        - решение: в файле package.json установить старую версию этого модуля
    http://localhost:3000/
        - решение: переименовать главный html файл на index.html
    


